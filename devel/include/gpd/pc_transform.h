// Generated by gencpp from file gpd/pc_transform.msg
// DO NOT EDIT!


#ifndef GPD_MESSAGE_PC_TRANSFORM_H
#define GPD_MESSAGE_PC_TRANSFORM_H

#include <ros/service_traits.h>


#include <gpd/pc_transformRequest.h>
#include <gpd/pc_transformResponse.h>


namespace gpd
{

struct pc_transform
{

typedef pc_transformRequest Request;
typedef pc_transformResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct pc_transform
} // namespace gpd


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gpd::pc_transform > {
  static const char* value()
  {
    return "c358e51efa4fc841b3755e5d2015c919";
  }

  static const char* value(const ::gpd::pc_transform&) { return value(); }
};

template<>
struct DataType< ::gpd::pc_transform > {
  static const char* value()
  {
    return "gpd/pc_transform";
  }

  static const char* value(const ::gpd::pc_transform&) { return value(); }
};


// service_traits::MD5Sum< ::gpd::pc_transformRequest> should match 
// service_traits::MD5Sum< ::gpd::pc_transform > 
template<>
struct MD5Sum< ::gpd::pc_transformRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gpd::pc_transform >::value();
  }
  static const char* value(const ::gpd::pc_transformRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gpd::pc_transformRequest> should match 
// service_traits::DataType< ::gpd::pc_transform > 
template<>
struct DataType< ::gpd::pc_transformRequest>
{
  static const char* value()
  {
    return DataType< ::gpd::pc_transform >::value();
  }
  static const char* value(const ::gpd::pc_transformRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gpd::pc_transformResponse> should match 
// service_traits::MD5Sum< ::gpd::pc_transform > 
template<>
struct MD5Sum< ::gpd::pc_transformResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gpd::pc_transform >::value();
  }
  static const char* value(const ::gpd::pc_transformResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gpd::pc_transformResponse> should match 
// service_traits::DataType< ::gpd::pc_transform > 
template<>
struct DataType< ::gpd::pc_transformResponse>
{
  static const char* value()
  {
    return DataType< ::gpd::pc_transform >::value();
  }
  static const char* value(const ::gpd::pc_transformResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GPD_MESSAGE_PC_TRANSFORM_H
